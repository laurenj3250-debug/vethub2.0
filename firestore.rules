rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isExistingOwner(userId) {
      return isSignedIn() && request.auth.uid == userId && resource.data != null;
    }

    /**
     * @description Secures access to user documents. Only the owner can read or write their own document.
     * @path /users/{userId}
     * @allow (create) User with UID 'user123' can create their own user document with id == 'user123'.
     * @deny (create) User with UID 'user123' cannot create a user document with id == 'user456'.
     * @principle Enforces user-ownership for all data access.
     */
    match /users/{userId} {
      allow get: if isOwner(userId);
      allow list: if false; // User listing is not permitted.
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Secures access to patient documents. Only the owner can read or write patients under their user ID.
     * @path /users/{userId}/patients/{patientId}
     * @allow (create) User with UID 'user123' can create a patient document under their user ID.
     * @deny (create) User with UID 'user13' cannot create a patient document under user ID 'user456'.
     * @principle Enforces user-ownership for all data access.
     */
    match /users/{userId}/patients/{patientId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Secures access to general task documents. Only the owner can read or write general tasks under their user ID.
     * @path /users/{userId}/generalTasks/{generalTaskId}
     * @allow (create) User with UID 'user123' can create a general task document under their user ID.
     * @deny (create) User with UID 'user13' cannot create a general task document under user ID 'user456'.
     * @principle Enforces user-ownership for all data access.
     */
    match /users/{userId}/generalTasks/{generalTaskId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Secures access to common problem documents. Only the owner can read or write common problems under their user ID.
     * @path /users/{userId}/commonProblems/{commonProblemId}
     * @allow (create) User with UID 'user123' can create a common problem document under their user ID.
     * @deny (create) User with UID 'user13' cannot create a common problem document under user ID 'user456'.
     * @principle Enforces user-ownership for all data access.
     */
    match /users/{userId}/commonProblems/{commonProblemId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Secures access to common comment documents. Only the owner can read or write common comments under their user ID.
     * @path /users/{userId}/commonComments/{commonCommentId}
     * @allow (create) User with UID 'user123' can create a common comment document under their user ID.
     * @deny (create) User with UID 'user13' cannot create a common comment document under user ID 'user456'.
     * @principle Enforces user-ownership for all data access.
     */
    match /users/{userId}/commonComments/{commonCommentId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

   /**
     * @description Secures access to common medication documents. Only the owner can read or write common medications under their user ID.
     * @path /users/{userId}/commonMedications/{commonMedicationId}
     * @allow (list) User with UID 'clWMcmcznjeyFw9wrKJbpKMc4Xd2' can list common medications under their user ID.
     * @deny (create) User with UID 'user13' cannot create a common medication document under user ID 'user456'.
     * @principle Enforces user-ownership for all data access.
     */
    match /users/{userId}/commonMedications/{commonMedicationId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }
  }
}